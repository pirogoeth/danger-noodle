// unbounded array
Int[] allTheThings;

// Bounded, uninitialized
Int[10] someOfTheThings;

// Get capacity with MAXELEM; Should return 10
print("someOfTheThings has max elements of", MAXELEM(someOfTheThings));

// Bounded, uninitialized
Int[5] notAllOfTheThings;

// Get (index of last elem +1) with ELEM; Should return _?
notAllOfTheThings = 5, 4, 3, 2;
print("notAllOfTheThings has max elements of", ELEM(notAllOfTheThings));

// Get length of String using LENGTH function
String helloString = "hello";
print("helloString has a length of ", LENGTH(helloString));

// Determine whether helloString is spaces or empty using SPACES function
print("helloString has is not all spaces or empty? ", SPACES(helloString));

// Unbounded, initialized
Int[] moreOfTheThings = 1, 2, 3, 4;

// Bounded, initialized
Int[5] compoundDecl = 1, 2, 3, 4, 5;

// only assignment
allTheThings = 5, 4, 3, 2, 1;

// [1, 3, 3, 4, 5]
nums[1] = 3;

// [1, 1, 1, 1, 1]
nums = 1;

Int someSingle = nums[3];

// overwrite two elements in an array
// [1, 2, 3, 5, 4]
compoundDecl[3:4] = 5, 4;

// uber-complex super-declaration
String myString = myStringArray[LENGTH(myStringArray[0]) - 7] # " hello " # myStringArray[1];
